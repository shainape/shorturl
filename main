import string
import random

URL_MAPPING = {}

def shorten_url(url):
    characters = string.ascii_letters + string.digits
    short_url = ''.join(random.choice(characters) for _ in range(6))
    URL_MAPPING[short_url] = url
    return short_url

def expand_url(short_url):
    if short_url in URL_MAPPING:
        return URL_MAPPING[short_url]
    else:
        return None

print("URL缩短命令行工具")

while True:
    print("\n请选择操作：")
    print("1. 缩短URL")
    print("2. 还原URL")
    print("3. 退出程序")

    choice = input("请选择操作（输入数字）：")

    if choice == '3':
        print("谢谢使用，再见！")
        break

    if choice == '1':
        long_url = input("请输入要缩短的URL：")
        short_url = shorten_url(long_url)
        print("短URL链接：", short_url)
    elif choice == '2':
        short_url = input("请输入要还原的短URL：")
        long_url = expand_url(short_url)
        if long_url:
            print("还原的URL链接：", long_url)
        else:
            print("无法找到对应的长URL。")
    else:
        print("无效的选择，请重新输入。")
//以上代码是一个简单的URL缩短命令行工具。用户可以选择缩短长URL或还原短URL，并提供相应的URL链接。

//shorten_url() 函数生成一个随机的6位短码，并将其与原始URL建立映射关系。expand_url() 函数根据短码查找对应的原始URL链接。

//应用程序使用一个无限循环来等待用户输入操作和相应的URL链接，并根据用户选择执行相应的URL缩短或还原操作。用户可以选择退出程序来结束应用程序的运行。

//请注意，这只是一个简单的示例，使用了随机生成的短码和字典存储URL映射关系。在实际项目中，您可能需要考虑更多的存储方式和处理重复URL的情况，以实现一个更完善和可靠的URL缩短工具。
